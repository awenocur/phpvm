#!/usr/bin/env bash

function compile_php() {
  # Compiles php in a local dir

  # $1 is the short php-xx.xx.xx name
  # $2 is the full path to the newly extracted php source
  cur="$PWD"
  cd "$2"
  mkdir -p "$phpvm_install_dir/$1"
  # TODO custom options
  options="--without-pear"
  ./configure --prefix="$phpvm_install_dir/$1" "$options" > /dev/null
  make > /dev/null && make install > /dev/null
  cd "$cur"
}

function extract_archive() {
  # Extracts the php source and passes to compile_php

  # $1 is the full path to .bz2 file
  # $2 is the full path to the results directory
  tar xjf "$1" -C "$phpvm_src_dir"
  version_name="`basename "$1" .tar.bz2`"
  result_dir="$phpvm_src_dir/$version_name"
  compile_php "$version_name" "$result_dir"
}

function download_version() {
  filename=""
  url=""

  # As a note, this is a nice HTTP request boolean format
  # curl -s --head http://myurl/ | head -n 1 | grep "HTTP/1.[01] [23].."

  if echo "$1" | grep -q  "[0-9]\.[0-9]\.[0-9]"
  then
    filename="php-$1.tar.bz2"
    php_url="http://us.php.net/get/$filename/from/this/mirror"
    response="`curl -s --head "$php_url" | head -n 1`"

    # TODO reform this logic
    if grep -q "HTTP/1.[01] [23].." $response
    then
      url="$php_url"
    else
      return 0
    fi

  # no minor version
  elif echo "$1" | grep -q  "[0-9]\.[0-9]"
  then
    version="`latest_version "$1"`"
    echo "Latest major version is: $version"
    filename="php-$version.tar.bz2"

  else
    echo "Please provide a valid php version number"
    return 0
  fi

  url="http://us.php.net/get/$filename/from/this/mirror"
  mkdir -p "$phpvm_raw_dir"
  wget -O "$phpvm_raw_dir/$filename" "$url"
  extract_archive "$phpvm_raw_dir/$filename"
}

function install_php() {
  if [ -z "$1" ]
  then
    echo "No version provided"
    return 0
  fi

  download_version "$1"
}

function latest_version() {
  # given a prefix like 5.4, gets the lastest version

  prefix="$1"
  last=""
  i=0
  min=0
  while :
  do
    filename="php-$prefix.$i.tar.bz2"
    php_url="http://us.php.net/get/$filename/from/this/mirror"
    response="`curl -s --head "$php_url" | head -n 1`"

    if echo "$response"  | grep -q  "HTTP/1.[01] [23].."
    then
      last="$i"
      i=$((i+1))

    else
      echo "$prefix.$last"
      break
    fi
  done
}
